[{"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/index.js":"1","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/store.js":"2","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/App.js":"3","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/index.js":"4","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/private/login.js":"5","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/contact/Contact.js":"6","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/company/Company.js":"7","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/user/User.js":"8","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/region/Region.js":"9","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/login/Login.js":"10","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/header/Header.js":"11","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/contact.js":"12","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/company.js":"13","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/region.js":"14","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/user.js":"15","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/company.js":"16","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/button/Button.js":"17","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/modal/Modal.js":"18","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/user.js":"19","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/index.js":"20","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/company.js":"21","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/util/localStorage.js":"22","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/user.js":"23","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/region.js":"24","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/region.js":"25"},{"size":434,"mtime":1615058761396,"results":"26","hashOfConfig":"27"},{"size":197,"mtime":1609954470804,"results":"28","hashOfConfig":"27"},{"size":1240,"mtime":1615160831018,"results":"29","hashOfConfig":"27"},{"size":336,"mtime":1614553718723,"results":"30","hashOfConfig":"27"},{"size":435,"mtime":1615060862613,"results":"31","hashOfConfig":"27"},{"size":132,"mtime":1614731466220,"results":"32","hashOfConfig":"27"},{"size":5626,"mtime":1615062030041,"results":"33","hashOfConfig":"27"},{"size":5963,"mtime":1615062123841,"results":"34","hashOfConfig":"27"},{"size":4877,"mtime":1615268176963,"results":"35","hashOfConfig":"27"},{"size":1287,"mtime":1614741830761,"results":"36","hashOfConfig":"27"},{"size":826,"mtime":1614658792661,"results":"37","hashOfConfig":"27"},{"size":1002,"mtime":1615060806362,"results":"38","hashOfConfig":"27"},{"size":1114,"mtime":1615061568299,"results":"39","hashOfConfig":"27"},{"size":5560,"mtime":1615060816359,"results":"40","hashOfConfig":"27"},{"size":1033,"mtime":1615060820204,"results":"41","hashOfConfig":"27"},{"size":1503,"mtime":1615061506120,"results":"42","hashOfConfig":"27"},{"size":244,"mtime":1615267105965,"results":"43","hashOfConfig":"27"},{"size":279,"mtime":1614991328742,"results":"44","hashOfConfig":"27"},{"size":1685,"mtime":1615058088899,"results":"45","hashOfConfig":"27"},{"size":957,"mtime":1614392579770,"results":"46","hashOfConfig":"27"},{"size":1240,"mtime":1615054863775,"results":"47","hashOfConfig":"27"},{"size":132,"mtime":1614660347524,"results":"48","hashOfConfig":"27"},{"size":1581,"mtime":1614993667271,"results":"49","hashOfConfig":"27"},{"size":3293,"mtime":1615163944437,"results":"50","hashOfConfig":"27"},{"size":2982,"mtime":1615249744978,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"105ppy0",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/index.js",[],["106","107"],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/store.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/App.js",["108"],"import React, { useEffect } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport LoginRoute from './private/login';\nimport ContactPage from './pages/contact/Contact';\nimport UserPage from './pages/user/User';\nimport CompanyPage from './pages/company/Company';\nimport RegionPage from './pages/region/Region';\nimport LoginPage from './pages/login/Login';\nimport Header from './components/common/header/Header';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRegions } from './actions/region';\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.auth.user)\n\n  useEffect(() => {\n    if (user) dispatch(getRegions())\n  }, [user])\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path={'/'} >\n          {user ? <Redirect to={'/contact'} /> : <LoginPage />}\n        </Route>\n        <LoginRoute exact path={'/contact'} component={ContactPage} />\n        <LoginRoute exact path={'/user'} component={UserPage} />\n        <LoginRoute exact path={'/company'} component={CompanyPage} />\n        <LoginRoute exact path={'/region'} component={RegionPage} />\n        <Redirect to='/' />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/index.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/private/login.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/contact/Contact.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/company/Company.js",["109","110"],"import React, { useEffect, useState, useMemo } from 'react';\nimport styles from './Company.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createCompany, deleteCompany, getCompanies, updateCompany } from '../../actions/company';\nimport Button from '../../components/common/button/Button';\nimport Modal from '../../components/common/modal/Modal';\n\nconst initCompany = () => ({ name: '', address: '', email: '', phone: '', city: '' })\n\nconst CompanyPage = () => {\n    const dispatch = useDispatch()\n    const companies = useSelector(state => state.company.companies)\n    const [newCompany, setNewCompany] = useState(initCompany())\n    const [modalVisible, setModalVisible] = useState(false)\n    const [action, setAction] = useState('Crear nueva compaÃ±Ã­a')\n\n    const handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.value;\n        const name = target.name;\n        setNewCompany(form => ({ ...form, [name]: value }))\n    }\n\n    const modalAction = () => setModalVisible(!modalVisible)\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        if (action === 'Crear nueva compaÃ±Ã­a') {\n            dispatch(createCompany(newCompany))\n        } else {\n            dispatch(updateCompany(newCompany))\n        }\n        modalAction()\n    }\n\n    const changeToNewUser = () => { setAction('Crear nueva compaÃ±Ã­a'); setNewCompany(initCompany()); modalAction() }\n    const changeToUpdateUser = (company) => {\n        setNewCompany(company);\n        setAction('Actualizar compaÃ±Ã­a');\n        modalAction()\n    }\n\n    const companiesList = useMemo(() =>\n        companies.map(company =>\n        (\n            <div key={company._id} className={styles.row}><div className={styles.item}>{company.name}</div>\n                <div className={styles.item}>{company.address}</div>\n                <div className={styles.item}>{company.email}</div>\n                <div className={styles.item}>{company.phone}</div>\n                <div className={styles.item}>{company.city}</div>\n                <div className={`${styles.item} ${styles.actionsContainer}`}>\n                    <i className={`fa fa-trash ${styles.action}`} onClick={() => dispatch(deleteCompany(company._id))}></i>\n                    <i className={`fa fa-pencil ${styles.action}`} onClick={() => changeToUpdateUser(company)}></i>\n                </div>\n            </div>)\n        ), [companies])\n\n    useEffect(() => {\n        dispatch(getCompanies())\n    }, [])\n\n    return (\n        <main className={styles.name}>\n            <section className={styles.userSection}>\n                <div className={styles.titleContainer}>\n                    <h1 className={styles.title}>CompaÃ±Ã­as</h1>\n                    <Button title={\"Nueva compaÃ±Ã­a\"} func={changeToNewUser} />\n                </div>\n                <div className={styles.table}>\n                    <div className={styles.row}>\n                        <div className={`${styles.item} ${styles.header}`}>Nombre</div>\n                        <div className={`${styles.item} ${styles.header}`}>DirecciÃ³n</div>\n                        <div className={`${styles.item} ${styles.header}`}>Email</div>\n                        <div className={`${styles.item} ${styles.header}`}>TelÃ©fono</div>\n                        <div className={`${styles.item} ${styles.header}`}>Ciudad</div>\n                        <div className={`${styles.item} ${styles.header}`}>Acciones</div>\n                    </div>\n                    {companiesList}\n                </div>\n            </section>\n            <Modal visible={modalVisible}>\n                <form onSubmit={onSubmit} className={styles.form}>\n                    <h1 className={styles.formTitle}>{action}</h1>\n                    <span onClick={() => { modalAction() }} style={{ position: 'absolute', right: 0, top: 0, margin: 30, cursor: 'pointer', fontSize: 30 }}>&times;</span>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'name'}>Nombre:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"name\"} type={\"text\"} value={newCompany.name} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'address'}>DirecciÃ³n:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"address\"} type={\"text\"} value={newCompany.address} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'email'}>Email:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"email\"} type={\"email\"} value={newCompany.email} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'phone'}>TelÃ©fono:</label>\n                        <input className={styles.input} onChange={handleInputChange} name={\"phone\"} type={\"number\"} value={newCompany.phone} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'city'}>Ciudad:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"city\"} type={\"text\"} value={newCompany.city} />\n                    </div>\n                    <Button title={'Guardar'} />\n                </form>\n            </Modal>\n        </main>\n    )\n}\n\nexport default CompanyPage;","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/user/User.js",["111","112"],"import React, { useEffect, useMemo, useState } from 'react';\nimport styles from './User.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUser, deleteUser, getUsers, updateUser, } from '../../actions/user';\nimport Button from '../../components/common/button/Button';\nimport Modal from '../../components/common/modal/Modal';\n\nconst initUser = () => ({ name: '', lastname: '', email: '', password: '', admin: false })\n\nconst UserPage = () => {\n    const dispatch = useDispatch()\n    const { users, user } = useSelector(state => state.auth)\n    const [newUser, setNewUser] = useState(initUser())\n    const [confirmPass, setConfirmPass] = useState('')\n    const [modalVisible, setModalVisible] = useState(false)\n    const [action, setAction] = useState('Crear nuevo usuario')\n\n    const handleInputChange = (event) => {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        setNewUser(form => { return { ...form, [name]: value } })\n    }\n\n    const modalAction = () => setModalVisible(!modalVisible)\n\n    const onSubmit = (event) => {\n        event.preventDefault()\n        if (confirmPass !== newUser.password) {\n            alert(\"Las contraseÃ±as no coinciden\")\n        } else {\n            if (action === 'Crear nuevo usuario') {\n                dispatch(createUser(newUser))\n            } else {\n                dispatch(updateUser(newUser))\n            }\n            modalAction()\n        }\n    }\n\n    const onConfirmPassChange = evt => setConfirmPass(evt.target.value)\n    const changeToNewUser = () => { setAction('Crear nuevo usuario'); setNewUser(initUser()); modalAction() }\n    const changeToUpdateUser = (user) => {\n        setNewUser(user);\n        setAction('Actualizar usuario');\n        modalAction()\n    }\n\n    const userList = useMemo(() =>\n        users.map(userS => (\n            <div key={userS._id} className={styles.row}><div className={styles.item}>{userS.name}</div>\n                <div className={styles.item}>{userS.lastname}</div>\n                <div className={styles.item}>{userS.email}</div>\n                <div className={styles.item}>{userS.admin ? \"Admin\" : \"BÃ¡sico\"}</div>\n                <div className={`${styles.item} ${styles.actionsContainer}`}>{user.admin ? <><i className={`fa fa-trash ${styles.action}`} onClick={() => dispatch(deleteUser(userS._id))}></i> <i className={`fa fa-pencil ${styles.action}`} onClick={() => changeToUpdateUser(userS)}></i></> : \"-\"}</div>\n            </div>)\n\n        ), [users])\n\n    useEffect(() => {\n        dispatch(getUsers())\n    }, [])\n\n    return (\n        <main className={styles.name}>\n            <section className={styles.userSection}>\n                <div className={styles.titleContainer}>\n                    <h1 className={styles.title}>Usuarios</h1>\n                    <Button title={\"Nuevo usuario\"} func={changeToNewUser} />\n                </div>\n                <div className={styles.table}>\n                    <div className={styles.row}>\n                        <div className={`${styles.item} ${styles.header}`}>Nombre</div>\n                        <div className={`${styles.item} ${styles.header}`}>Apellido</div>\n                        <div className={`${styles.item} ${styles.header}`}>Email</div>\n                        <div className={`${styles.item} ${styles.header}`}>Perfil</div>\n                        <div className={`${styles.item} ${styles.header}`}>Acciones</div>\n                    </div>\n                    {userList}\n                </div>\n            </section>\n            <Modal visible={modalVisible}>\n                <form onSubmit={onSubmit} className={styles.form}>\n                    <h1 className={styles.formTitle}>{action}</h1>\n                    <span onClick={() => { modalAction() }} style={{ position: 'absolute', right: 0, top: 0, margin: 30, cursor: 'pointer', fontSize: 30 }}>&times;</span>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'name'}>Nombre:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"name\"} type={\"text\"} value={newUser.name} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'lastname'}>Apellido:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"lastname\"} type={\"text\"} value={newUser.lastname} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'email'}>Email:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"email\"} type={\"email\"} value={newUser.email} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'admin'}>Administrador:</label>\n                        <input className={styles.input} onChange={handleInputChange} name={\"admin\"} type={\"checkbox\"} value={newUser.admin} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label htmlFor={'password'}>ContraseÃ±a:</label>\n                        <input required={true} className={styles.input} onChange={handleInputChange} name={\"password\"} type={\"password\"} value={newUser.password} />\n                    </div>\n                    <div className={styles.inputContainer}>\n                        <label>Repetir contraseÃ±a:</label>\n                        <input required={true} className={styles.input} onChange={onConfirmPassChange} type={\"password\"} value={confirmPass} />\n                    </div>\n                    <Button title={'Guardar'} />\n                </form>\n            </Modal>\n        </main>\n    )\n}\n\nexport default UserPage;","/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/region/Region.js",["113"],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/pages/login/Login.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/header/Header.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/contact.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/company.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/region.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/reducers/user.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/company.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/button/Button.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/components/common/modal/Modal.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/user.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/index.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/company.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/util/localStorage.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/user.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/actions/region.js",[],"/Users/camilo/Docs/Acamica/data-warehouse-ac/front/src/api/region.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":19,"column":6,"nodeType":"120","endLine":19,"endColumn":12,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":56,"column":12,"nodeType":"120","endLine":56,"endColumn":23,"suggestions":"123"},{"ruleId":"118","severity":1,"message":"119","line":60,"column":8,"nodeType":"120","endLine":60,"endColumn":10,"suggestions":"124"},{"ruleId":"118","severity":1,"message":"125","line":58,"column":12,"nodeType":"120","endLine":58,"endColumn":19,"suggestions":"126"},{"ruleId":"118","severity":1,"message":"119","line":62,"column":8,"nodeType":"120","endLine":62,"endColumn":10,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":75,"column":8,"nodeType":"120","endLine":75,"endColumn":17,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useMemo has missing dependencies: 'changeToUpdateUser' and 'dispatch'. Either include them or remove the dependency array.",["133"],["134"],"React Hook useMemo has missing dependencies: 'changeToUpdateUser', 'dispatch', and 'user.admin'. Either include them or remove the dependency array.",["135"],["136"],"React Hook useMemo has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"142","fix":"146"},{"desc":"147","fix":"148"},"Update the dependencies array to be: [dispatch, user]",{"range":"149","text":"150"},"Update the dependencies array to be: [changeToUpdateUser, companies, dispatch]",{"range":"151","text":"152"},"Update the dependencies array to be: [dispatch]",{"range":"153","text":"154"},"Update the dependencies array to be: [changeToUpdateUser, dispatch, user.admin, users]",{"range":"155","text":"156"},{"range":"157","text":"154"},"Update the dependencies array to be: [dispatch, regions]",{"range":"158","text":"159"},[710,716],"[dispatch, user]",[2428,2439],"[changeToUpdateUser, companies, dispatch]",[2504,2506],"[dispatch]",[2582,2589],"[changeToUpdateUser, dispatch, user.admin, users]",[2650,2652],[3760,3769],"[dispatch, regions]"]